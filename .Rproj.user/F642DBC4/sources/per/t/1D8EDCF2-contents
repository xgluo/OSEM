datTech <- read.csv("~/Downloads/techMentalHealth.csv", header = TRUE)

head(datTech)
any(is.na(datTech))

datTech$Timestamp <- datTech$comments <- datTech$Country <- datTech$state <- datTech$Gender <- NULL

datTech <- na.omit(datTech)

datTech <- datTech[-which((datTech$Age < 10)),]
datTech <- datTech[-which((datTech$Age > 100)),]

datTech$Age <- cut(datTech$Age, breaks = c(-1,20,40,60,80,100), labels = FALSE) - 1

temp <- c("self_employed","family_history","treatment","remote_work","tech_company","obs_consequence")
temp2 <- datTech[, temp]
temp2[temp2 == "No"] <- 0
temp2[temp2 == "Yes"] <- 1
datTech[, temp] <- temp2

datTech$work_interfere[datTech$work_interfere == "Never"] <- 0
datTech$work_interfere[datTech$work_interfere == "Rarely"] <- 1
datTech$work_interfere[datTech$work_interfere == "Sometimes"] <- 2
datTech$work_interfere[datTech$work_interfere == "Often"] <- 3

datTech$no_employees[datTech$no_employees == "1-5"] <- 0
datTech$no_employees[datTech$no_employees == "6-25"] <- 1
datTech$no_employees[datTech$no_employees == "26-100"] <- 2
datTech$no_employees[datTech$no_employees == "100-500"] <- 3
datTech$no_employees[datTech$no_employees == "500-1000"] <- 4
datTech$no_employees[datTech$no_employees == "More than 1000"] <- 5

temp <- c("benefits","wellness_program","seek_help","anonymity","mental_vs_physical")
temp2 <- datTech[, temp]
temp2[temp2 == "No"] <- 0
temp2[temp2 == "Don't know"] <- 1
temp2[temp2 == "Yes"] <- 2
datTech[, temp] <- temp2

datTech$care_options[datTech$care_options == "No"] <- 0
datTech$care_options[datTech$care_options == "Not sure"] <- 1
datTech$care_options[datTech$care_options == "Yes"] <- 2

datTech$leave[datTech$leave == "Very easy"] <- 0
datTech$leave[datTech$leave == "Somewhat easy"] <- 1
datTech$leave[datTech$leave == "Don't know"] <- 2
datTech$leave[datTech$leave == "Somewhat difficult"] <- 3
datTech$leave[datTech$leave == "Very difficult"] <- 4

temp <- c("mental_health_consequence","phys_health_consequence","mental_health_interview","phys_health_interview")
temp2 <- datTech[, temp]
temp2[temp2 == "No"] <- 0
temp2[temp2 == "Maybe"] <- 1
temp2[temp2 == "Yes"] <- 2
datTech[, temp] <- temp2

temp <- c("coworkers","supervisor")
temp2 <- datTech[, temp]
temp2[temp2 == "No"] <- 0
temp2[temp2 == "Some of them"] <- 1
temp2[temp2 == "Yes"] <- 2
datTech[, temp] <- temp2


for (i in c(1:ncol(datTech))) {
  datTech[,i] <- as.integer(datTech[,i])
}

save(datTech,file = "~/Documents/Projects/OSEM/simulations_20210629/real_data/datTech.RData")

# Create training and test set for validation set approach (80% train/20% test)
n <- ncol(datTech)
N <- nrow(datTech)
test <- sample(1:N, N/5, replace=FALSE)
train <- (-test)
train.data <- datTech[train,]
test.data <- datTech[test,]
datTech_levels <- apply(datTech, 2, function(x) length(unique(x)))
datTech_levels - apply(train.data, 2, function(x) length(unique(x)))
mean(datTech_levels)

BDE <- scoreparameters("bdecat",train.data,bdecatpar = list(chi = 80,bdecatCvec=datTech_levels))
BDEfit <- iterativeMCMC(BDE)
sum(scoreagainstDAG(BDE,BDEfit$DAG,test.data,bdecatCvec=datTech_levels))
mean(apply(BDEfit$DAG,2,sum))

OSEMfit <- ordinalStructEM(n, train.data,
                           usrpar = list(penType = "other",
                                         L = 5,
                                         lambda = 2,
                                         preLevels = datTech_levels))
OSEM.test.param <- OSEMfit$param
OSEM.test.param$data <- test.data
observedLL(OSEM.test.param)
mean(apply(OSEMfit$DAG,2,sum))


BGE <- scoreparameters("bge", train.data, bgepar = list(am = 6))
BGEfit <- iterativeMCMC(BGE)
mean(apply(BGEfit$DAG,2,sum))
BGE.test.param <- BGE
BGE.test.param$Sigma_hat <- BGe_MAP_Sigma(BGE$TN,BGEfit$DAG)
BGE.test.param$cuts <- OSEM.test.param$cuts
BGE.test.param$data <- test.data
observedLL(BGE.test.param)
