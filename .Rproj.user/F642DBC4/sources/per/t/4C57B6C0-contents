datIndia <- read.csv("~/Downloads/JobSurveyIndia.csv", header = TRUE)

head(datIndia)
any(is.na(datIndia))

datIndia$X <- NULL

datIndia$Employment.Sector[datIndia$Employment.Sector == "Entrepreneurship"] <- 0
datIndia$Employment.Sector[datIndia$Employment.Sector == "Private Sector"] <- 1
datIndia$Employment.Sector[datIndia$Employment.Sector == "Government Sector"] <- 2

datIndia$Employment.Background[datIndia$Employment.Background == "Art "] <- "Art"
datIndia$Employment.Background[datIndia$Employment.Background == "Art"] <- 0
datIndia$Employment.Background[datIndia$Employment.Background == "Non-Technical"] <- 1
datIndia$Employment.Background[datIndia$Employment.Background == "Technical"] <- 2

datIndia$Public.Dealing[datIndia$Public.Dealing == "No "] <- "No"
datIndia$Public.Dealing[datIndia$Public.Dealing == "No"] <- 0
datIndia$Public.Dealing[datIndia$Public.Dealing == "Yes"] <- 1

datIndia$Degree[datIndia$Degree == "Yes "] <- "Yes"
datIndia$Degree[datIndia$Degree == "Yes"] <- 1
datIndia$Degree[datIndia$Degree == "No"] <- 0

datIndia$IdealNumberOfWorkdays <- datIndia$IdealNumberOfWorkdays - 4

datIndia$IdealYearlyIncome[datIndia$IdealYearlyIncome == "600K-900K"] <- 0
datIndia$IdealYearlyIncome[datIndia$IdealYearlyIncome == "900K-1200K"] <- 1
datIndia$IdealYearlyIncome[datIndia$IdealYearlyIncome == "1200K-1500K"] <- 2
datIndia$IdealYearlyIncome[datIndia$IdealYearlyIncome == "More Than 1500K"] <- 3

for (i in c(1:ncol(datIndia))) {
  datIndia[,i] <- as.integer(datIndia[,i])
}

save(datIndia,file = "~/Documents/Projects/OSEM/simulations_20210629/real_data/datIndia.RData")

# Create training and test set for validation set approach (80% train/20% test)
n <- ncol(datIndia)
N <- nrow(datIndia)
test <- sample(1:N, N/5, replace=FALSE)
train <- (-test)
train.data <- datIndia[train,]
test.data <- datIndia[test,]
datIndia_levels <- apply(datIndia, 2, function(x) length(unique(x)))
datIndia_levels - apply(train.data, 2, function(x) length(unique(x)))
mean(datIndia_levels)

BDE <- scoreparameters("bdecat",train.data,bdecatpar = list(chi = 80,bdecatCvec=datIndia_levels))
BDEfit <- iterativeMCMC(BDE)
sum(scoreagainstDAG(BDE,BDEfit$DAG,test.data,bdecatCvec=datIndia_levels))
mean(apply(BDEfit$DAG,2,sum))

OSEMfit <- ordinalStructEM(n, train.data,
                           usrpar = list(penType = "other",
                                         L = 5,
                                         lambda = 2,
                                         preLevels = datIndia_levels))
OSEM.test.param <- OSEMfit$param
OSEM.test.param$data <- test.data
observedLL(OSEM.test.param)
mean(apply(OSEMfit$DAG,2,sum))


BGE <- scoreparameters("bge", train.data, bgepar = list(am = 6))
BGEfit <- iterativeMCMC(BGE)
mean(apply(BGEfit$DAG,2,sum))
BGE.test.param <- BGE
BGE.test.param$Sigma_hat <- BGe_MAP_Sigma(BGE$TN,BGEfit$DAG)
BGE.test.param$cuts <- OSEM.test.param$cuts
BGE.test.param$data <- test.data
observedLL(BGE.test.param)
