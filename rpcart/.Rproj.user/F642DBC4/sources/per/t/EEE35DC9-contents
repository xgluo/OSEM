library(ggplot2)
library(gridExtra)
library(plyr)
library(ggpubr)
library(latex2exp)
library(dplyr)
library(abind)

setwd("~/Documents/Projects/OSEM/simulations_20210510/")
myPalette <- c("#E69F00","#56B4E9","#2b9e00","#0072B2", "#73009e", "#CC79A7","#999999")
myShapes <- c(19,17,15,7,8,11)


get_ROC <- function(fname, title, softP2P = TRUE, mixed = FALSE) {
  load(paste(fname,".RData",sep = ""))
  
  if (softP2P) {
    results <- results[,,,2,]
  } else {
    results <- results[,,,1,]
  }
  
  if (mixed) {
    results <- results[c("OSEM","pcart","RPC","CPC","MMPC"),,,]
    myPalette <- c("#E69F00","#56B4E9","#2b9e00","#0072B2", "#73009e", "#CC79A7")
    myShapes <- c(19,17,15,7,8)
  } else {
    results <- results[c("OSEM","BGe","BDe","GPC","NPC","OPC"),,,]
    myPalette <- c("#E69F00","#56B4E9","#2b9e00","#0072B2", "#73009e", "#CC79A7","#999999")
    myShapes <- c(19,17,15,7,8,11)
  }
  
  test <- adply(results,c(1,2,4))
  colnames(test)[1] <- "method"
  
  results_mean <- apply(results,c(1,2,3),mean)
  test2 <- adply(results_mean,c(1,2))
  colnames(test2)[1] <- "method"
  test3 <- test2 %>% mutate(dist = TPR + 1 - FPR_P) 
  test3 <- test3[,c('method','TPR','FPR_P','dist')]
  test3 <- test3 %>% group_by(method) %>% filter(dist == max(dist))
  
  g <- ggplot(test) + xlab("FPRp") + ylab("TPR") + coord_cartesian(xlim = c(0,1),ylim = c(0,1)) +
    geom_point(aes(x = FPR_P, y = TPR, group = method, fill = factor(method)), alpha = 0.15, stroke = 0,shape = 21) +
    geom_path(mapping = aes(x = FPR_P, y = TPR, group = method, colour = factor(method)),
              data = test2,
              size = 1) + 
    scale_fill_manual(values = myPalette) + scale_color_manual(values = myPalette) +
    scale_shape_manual(values = myShapes) +
    guides(shape = FALSE,fill = FALSE, colour = guide_legend(override.aes = list(shape = myShapes))) +
    geom_point(data = test3,mapping = aes(x = FPR_P, y = TPR, 
                                          group = method, shape = factor(method),
                                          colour = factor(method)),
               size = 4.5) +
    labs(color = "Method",title = title)+theme(axis.text=element_text(size=8),
                                               axis.title=element_text(size=8),
                                               plot.title = element_text(size=8))
  
  return(g)
}

get_boxplot <- function(fname, metric, title, softP2P = TRUE, mixed = FALSE) {
  load(paste(fname,".RData",sep = ""))
  
  if (softP2P) {
    results <- results[,,,2,]
  } else {
    results <- results[,,,1,]
  }
  
  if (mixed) {
    results <- results[c("OSEM","pcart","RPC","CPC","MMPC"),,,]
    myPalette <- c("#E69F00","#56B4E9","#2b9e00","#0072B2", "#73009e", "#CC79A7")
    myShapes <- c(19,17,15,7,8)
    temp1 <- apply(results[,,"TPR",] + 1 - results[,,"FPR_P",],c(1,2),mean)
    temp2 <- apply(temp1, 1, which.max)
    temp3 <- sapply(c(1:length(temp2)),function (i) results[i,temp2[i],metric,])
    colnames(temp3) <- c("OSEM","pcart","RPC","CPC","MMPC")
    
  } else {
    results <- results[c("OSEM","BGe","BDe","GPC","NPC","OPC"),,,]
    myPalette <- c("#E69F00","#56B4E9","#2b9e00","#0072B2", "#73009e", "#CC79A7","#999999")
    myShapes <- c(19,17,15,7,8,11)
    temp1 <- apply(results[,,"TPR",] + 1 - results[,,"FPR_P",],c(1,2),mean)
    temp2 <- apply(temp1, 1, which.max)
    temp3 <- sapply(c(1:length(temp2)),function (i) results[i,temp2[i],metric,])
    colnames(temp3) <- c("OSEM","BGe","BDe","GPC","NPC","OPC")
  }
  
  test <- adply(temp3,c(1,2))
  colnames(test) <- c("No.","method",metric)
  
  if (metric == "runtime") {
    g <- ggplot(test, aes(x = method, y = runtime, fill = method)) +
      geom_boxplot() + 
      labs(fill = "Method",title = title) +
      ylab("Runtime (in seconds)") + xlab("Method") + 
      scale_y_log10(breaks = c(0.01,10,100,200,300), limits = c(0.01,400), labels = c(0.01,10,100,200,300))  + 
      scale_fill_manual(values = myPalette) + scale_color_manual(values = myPalette)
  } else if (metric == "Precision") {
    g <- ggplot(test, aes(x = method, y = Precision, fill = method)) +
      geom_boxplot() + 
      labs(fill = "Method",title = title) +
      ylab("Precision") + xlab("Method") + 
      coord_cartesian(ylim = c(0,1))  + 
      scale_fill_manual(values = myPalette) + scale_color_manual(values = myPalette)
  }
  
  return(g)
  
}


g1 <- get_ROC("N300_n12_s4_L3_nu2","N = 300, n = 12")
g2 <- get_ROC("N500_n12_s4_L3_nu2","N = 500, n = 12")
g3 <- get_ROC("N800_n12_s4_L3_nu2","N = 800, n = 12")
g4 <- get_ROC("N300_n20_s4_L3_nu2","N = 300, n = 20")
g5 <- get_ROC("N500_n20_s4_L3_nu2","N = 500, n = 20")
g6 <- get_ROC("N800_n20_s4_L3_nu2","N = 800, n = 20")
g7 <- get_ROC("N300_n30_s4_L3_nu2","N = 300, n = 30")
g8 <- get_ROC("N500_n30_s4_L3_nu2","N = 500, n = 30")
g9 <- get_ROC("N800_n30_s4_L3_nu2","N = 800, n = 30")
ggarrange(g1,g2,g3,g4,g5,g6,g7,g8,g9, ncol=3, nrow=3, common.legend = TRUE, legend="right")


g1 <- get_ROC("N300_n12_s4_L3_nu2","N = 300, n = 12",mixed = TRUE)
g2 <- get_ROC("N500_n12_s4_L3_nu2","N = 500, n = 12",mixed = TRUE)
g3 <- get_ROC("N800_n12_s4_L3_nu2","N = 800, n = 12",mixed = TRUE)
g4 <- get_ROC("N300_n20_s4_L3_nu2","N = 300, n = 20",mixed = TRUE)
g5 <- get_ROC("N500_n20_s4_L3_nu2","N = 500, n = 20",mixed = TRUE)
g6 <- get_ROC("N800_n20_s4_L3_nu2","N = 800, n = 20",mixed = TRUE)
g7 <- get_ROC("N300_n30_s4_L3_nu2","N = 300, n = 30",mixed = TRUE)
g8 <- get_ROC("N500_n30_s4_L3_nu2","N = 500, n = 30",mixed = TRUE)
g9 <- get_ROC("N800_n30_s4_L3_nu2","N = 800, n = 30",mixed = TRUE)
ggarrange(g1,g2,g3,g4,g5,g6,g7,g8,g9, ncol=3, nrow=3, common.legend = TRUE, legend="right")

g1 <- get_ROC("N500_n20_s2_L3_nu2","d = 2")
g2 <- get_ROC("N500_n20_s3_L3_nu2","d = 3")
g3 <- get_ROC("N500_n20_s4_L3_nu2","d = 4")
g4 <- get_ROC("N500_n20_s5_L3_nu2","d = 5")
ggarrange(g1,g2,g3,g4,ncol=2, nrow=2, common.legend = TRUE, legend="right")

g1 <- get_ROC("N500_n20_s2_L3_nu2","d = 2",mixed = TRUE)
g2 <- get_ROC("N500_n20_s3_L3_nu2","d = 3",mixed = TRUE)
g3 <- get_ROC("N500_n20_s4_L3_nu2","d = 4",mixed = TRUE)
g4 <- get_ROC("N500_n20_s5_L3_nu2","d = 5",mixed = TRUE)
ggarrange(g1,g2,g3,g4,ncol=2, nrow=2, common.legend = TRUE, legend="right")

g1 <- get_ROC("N500_n20_s4_L2_nu08",TeX("$E\\[L_i\\] = 2$, $\\nu = 0.8$"))
g2 <- get_ROC("N500_n20_s4_L2_nu1",TeX("$E\\[L_i\\] = 2$, $\\nu = 1$"))
g3 <- get_ROC("N500_n20_s4_L2_nu2",TeX("$E\\[L_i\\] = 2$, $\\nu = 2$"))
g4 <- get_ROC("N500_n20_s4_L3_nu08",TeX("$E\\[L_i\\] = 3$, $\\nu = 0.8$"))
g5 <- get_ROC("N500_n20_s4_L3_nu1",TeX("$E\\[L_i\\] = 3$, $\\nu = 1$"))
g6 <- get_ROC("N500_n20_s4_L3_nu2",TeX("$E\\[L_i\\] = 3$, $\\nu = 2$"))
g7 <- get_ROC("N500_n20_s4_L4_nu08_p1",TeX("$E\\[L_i\\] = 4$, $\\nu = 0.8$"))
g8 <- get_ROC("N500_n20_s4_L4_nu1_p1",TeX("$E\\[L_i\\] = 4$, $\\nu = 1$"))
g9 <- get_ROC("N500_n20_s4_L4_nu2",TeX("$E\\[L_i\\] = 4$, $\\nu = 2$"))
g10 <- get_ROC("N500_n20_s4_L5_nu08_p1",TeX("$E\\[L_i\\] = 5$, $\\nu = 0.8$"))
g11 <- get_ROC("N500_n20_s4_L5_nu1_p1",TeX("$E\\[L_i\\] = 5$, $\\nu = 1$"))
g12 <- get_ROC("N500_n20_s4_L5_nu2_p1",TeX("$E\\[L_i\\] = 5$, $\\nu = 2$"))
ggarrange(g1,g2,g3,g4,g5,g6,g7,g8,g9,g10,g11,g12, ncol=3, nrow=4, common.legend = TRUE, legend="right")

g1 <- get_boxplot("N500_n12_s4_L3_nu2","runtime","N = 500, n = 12")
g2 <- get_boxplot("N500_n20_s4_L3_nu2","runtime","N = 500, n = 20")
g3 <- get_boxplot("N500_n30_s4_L3_nu2","runtime","N = 500, n = 30")
ggarrange(g1,g2,g3,ncol=3, nrow=1, common.legend = TRUE, legend="top")

g1 <- get_boxplot("N500_n12_s4_L3_nu2","runtime","N = 500, n = 12",mixed = TRUE)
g2 <- get_boxplot("N500_n20_s4_L3_nu2","runtime","N = 500, n = 20",mixed = TRUE)
g3 <- get_boxplot("N500_n30_s4_L3_nu2","runtime","N = 500, n = 30",mixed = TRUE)
ggarrange(g1,g2,g3,ncol=3, nrow=1, common.legend = TRUE, legend="top")

g1 <- get_boxplot("N500_n12_s4_L3_nu2","Precision","N = 500, n = 12")
g2 <- get_boxplot("N500_n20_s4_L3_nu2","Precision","N = 500, n = 20")
g3 <- get_boxplot("N500_n30_s4_L3_nu2","Precision","N = 500, n = 30")
ggarrange(g1,g2,g3,ncol=3, nrow=1, common.legend = TRUE, legend="top")

g1 <- get_boxplot("N500_n12_s4_L3_nu2","runtime","N = 500, n = 12",mixed = TRUE)
g2 <- get_boxplot("N500_n20_s4_L3_nu2","runtime","N = 500, n = 20",mixed = TRUE)
g3 <- get_boxplot("N500_n30_s4_L3_nu2","runtime","N = 500, n = 30",mixed = TRUE)
ggarrange(g1,g2,g3,ncol=3, nrow=1, common.legend = TRUE, legend="top")


######################

x <- seq(-3,3,by = 0.1)
par(mfrow = c(1,3))
curve(dnorm(x),from = -3,to = 3, ylim = c(0,0.5),xlab = TeX("$Y_i$"),ylab = "")
cuts <- qnorm(c(0.06,0.11))
abline(v = cuts, col = "green")
curve(dnorm(x),from = -3,to = 3, ylim = c(0,0.5),xlab = TeX("$Y_i$"),ylab = "")
cuts <- qnorm(c(0.3,0.41))
abline(v = cuts, col = "green")
curve(dnorm(x),from = -3,to = 3, ylim = c(0,0.5),xlab = TeX("$Y_i$"),ylab = "")
cuts <- qnorm(c(0.34,0.78))
abline(v = cuts, col = "green")

######################

# log loss

# logloss4
chi_list <- c(30,40,50,60,70,80,90)
lambda_list <- c(1,2,3,4,5,6,7)
am_list <- c(0.1,0.25,0.5,1,1.5,2,3)
pcart_alpha_list <- c(5,8,11,15,18,20,25)
opcart_alpha_list <- c(0.1,0.5,1,1.5,2,3,4)

# logloss5
chi_list <- c(35,40,45,50,55,60,65)
lambda_list <- c(1,2,3,4,5,6,7)
am_list <- c(0.1,0.25,0.5,1,1.5,2,3)
pcart_alpha_list <- c(5,8,11,15,18,20,25)
opcart_alpha_list <- c(0.1,0.5,1,1.5,2,3,4)

# logloss6
chi_list <- c(30,35,40,45,50,55,60)
lambda_list <- c(1.5,2,2.5,3,3.5,4,5)
am_list <- c(0.025,0.05,0.1,0.25,0.5,1,1.5)
pcart_alpha_list <- c(5,8,11,15,18,20,25)
opcart_alpha_list <- c(1.5,2,2.5,3,3.5,4,4.5)

# logloss7
chi_list <- c(20,30,40,50,60,70,80)
lambda_list <- c(1.5,2,2.5,3,3.5,4,5)
am_list <- c(0.025,0.05,0.1,0.25,0.5,1,1.5)
pcart_alpha_list <- c(5,8,11,15,18,20,25)
opcart_alpha_list <- c(1.5,2,2.5,3,3.5,4,4.5)

# logloss8
chi_list <- c(20,30,40,50,60,70,80)
lambda_list <- c(2/log(327),(2/log(327) + 1)/2,1,1.5,2,2.5,3)
am_list <- c(0.5,1,3,6,10,20,30)
pcart_alpha_list <- c(5,8,11,15,18,20,25)
opcart_alpha_list <- c(1.5,2,2.5,3,3.5,4,4.5)

# logloss9
chi_list <- c(20,30,40,50,60,70,80)
lambda_list <- c(2/log(327),(2/log(327) + 1)/2,1,1.25,1.5,2,2.5)
am_list <- c(1,3,5,7,10,15,20)
pcart_alpha_list <- c(5,8,11,15,18,20,25)
opcart_alpha_list <- c(1.5,2,2.5,3,3.5,4,4.5)

get_log_loss <- function(fname, method, metric, title, param_list, x_lab, y_lab, col) {
  load(paste(fname,".RData",sep = ""))
  
  switch (metric,
    "log_loss" = {
      test <- adply(results[method,,metric,],c(1,2))
      test$param <- param_list[test$X1]
      colnames(test) <- c("index","nr","log_loss","param")
      test2 <- with(test,aggregate(.~index,test,mean))[,c(3,4)]
      g <- ggplot(test) + 
        geom_boxplot(aes(x = param, y = log_loss, group = param), color = col, show.legend = FALSE) +  
        geom_line(mapping = aes(x = param, y = log_loss), color = col, data = test2, show.legend = FALSE) + 
        labs(title = title) + ylab(y_lab) + xlab(x_lab) + theme(legend.position = "none") + ylim(c(-2400,-2100))
    },
    "avg_nr_pa" = {
      test <- adply(results[method,,metric,],c(1,2))
      test$param <- param_list[test$X1]
      colnames(test) <- c("index","nr","avg_nr_pa","param")
      test2 <- with(test,aggregate(.~index,test,mean))[,c(3,4)]
      g <- ggplot(test) + 
        geom_boxplot(aes(x = param, y = avg_nr_pa, group = param), color = col, show.legend = FALSE) +  
        geom_line(mapping = aes(x = param, y = avg_nr_pa), color = col, data = test2, show.legend = FALSE) + 
        labs(title = title) + ylab(y_lab) + xlab(x_lab) + theme(legend.position = "none") + ylim(c(0,5))
    },
    "both" = {
      test <- adply(results[method,,,],c(1,2,4))
      test2 <- adply(apply(results[method,,,], c(1,2,3), mean),c(1,2))
      test3 <- test2 %>% group_by(X1) %>% filter(log_loss == max(log_loss))
      g <- ggplot(test)  + ylim(c(-2400,-2100)) + xlim(c(1,5)) + 
        geom_point(aes(x = avg_nr_pa, y = log_loss, group = X1, fill = factor(X1)), alpha = 0.15, stroke = 0,shape = 21) +
        geom_line(mapping = aes(x = avg_nr_pa, y = log_loss, group = X1, colour = factor(X1)), data = test2) +
        geom_point(data = test3,mapping = aes(x = avg_nr_pa, y = log_loss, 
                                              group = X1, shape = factor(X1),
                                              colour = factor(X1)),
                   size = 4.5) + 
        scale_color_manual(values = myPalette) + 
        scale_fill_manual(values = myPalette) +
        scale_shape_manual(values = myShapes) +
        guides(shape = FALSE,fill = FALSE, colour = guide_legend(override.aes = list(shape = myShapes[1:length(methods)]))) + 
        labs(color = "Method", title = title) + ylab(y_lab) + xlab(x_lab)
    }
  )
  return(g)
}

current_dataset <- "logloss9"
g1 <- get_log_loss(current_dataset,"OSEM","log_loss","OSEM",lambda_list,TeX("$\\lambda$"),"log loss",myPalette[1])
g2 <- get_log_loss(current_dataset,"OSEM","avg_nr_pa","OSEM",lambda_list,TeX("$\\lambda$"),"average parent set size",myPalette[1])
g3 <- get_log_loss(current_dataset,"BGe","log_loss","BGe",am_list,TeX("$a_m$"),"log loss",myPalette[2])
g4 <- get_log_loss(current_dataset,"BGe","avg_nr_pa","BGe",am_list,TeX("$a_m$"),"average parent set size",myPalette[2])
g5 <- get_log_loss(current_dataset,"BDe","log_loss","BDe",chi_list,TeX("$\\chi$"),"log loss",myPalette[3])
g6 <- get_log_loss(current_dataset,"BDe","avg_nr_pa","BDe",chi_list,TeX("$\\chi$"),"average parent set size",myPalette[3])
g7 <- get_log_loss(current_dataset,"pcart","log_loss","pcart",pcart_alpha_list,TeX("$\\alpha$"),"log loss",myPalette[4])
g8 <- get_log_loss(current_dataset,"pcart","avg_nr_pa","pcart",pcart_alpha_list,TeX("$\\alpha$"),"average parent set size",myPalette[4])
g9 <- get_log_loss(current_dataset,"opcart","log_loss","opcart",opcart_alpha_list,TeX("$\\alpha$"),"log loss",myPalette[5])
g10 <- get_log_loss(current_dataset,"opcart","avg_nr_pa","opcart",opcart_alpha_list,TeX("$\\alpha$"),"average parent set size",myPalette[5])
g12 <- get_log_loss(current_dataset,"pcart2","log_loss","pcart approx.",pcart_alpha_list,TeX("$\\alpha$"),"log loss",myPalette[6])


ggarrange(g1,g3,g5,g2,g4,g6,nrow = 2,ncol = 3,align = "v")
ggarrange(g1,g3,g5,g7,g2,g4,g6,g8,nrow = 2,ncol = 4,align = "v")
ggarrange(g1,g3,g5,g7,g9,g2,g4,g6,g8,g10,nrow = 2,ncol = 5,align = "v")
ggarrange(g1,g3,g2,g4,nrow = 2,ncol = 2,align = "v")

g11 <- get_log_loss(current_dataset,c("OSEM","BGe"),"both","",NULL,"average parent set size","log loss",NULL)


results1 <- array(results[1,3,,],dim = c(1,2,100))
results2 <- results[c(2:4),4,,]
#results3 <- array(results[3,4,,],dim = c(1,2,100))
#results2 <- abind(results1,results3,results2,along = 1)
results2 <- abind(results1,results2,along = 1)
dimnames(results2)[[1]] <- c("OSEM","BDe","BGe","pcart")
results2 <- results2[c("OSEM","BGe","BDe","pcart"),,]
test <- adply(results2[,1,],c(1,2))
colnames(test) <- c("Method","Nr","Log_loss")
test2 <- with(test,aggregate(.~Method,test,mean))[,c(1,3)]
colnames(test2) <- list("Method","Log_loss")
g1 <- ggplot(test, aes(x = Method, y = Log_loss, color = Method)) + geom_boxplot(show.legend = FALSE) +
  labs(color = "Method") + 
  ylab("log loss on test data") + xlab("Method") + 
  scale_fill_manual(values = myPalette) + scale_color_manual(values = myPalette) + theme(legend.position = "none")


test <- adply(results2[,2,],c(1,2))
colnames(test) <- c("Method","Nr","avg_nr_pa")
test2 <- with(test,aggregate(.~Method,test,mean))[,c(1,3)]
colnames(test2) <- list("Method","avg_nr_pa")
g2 <- ggplot(test, aes(x = Method, y = avg_nr_pa, color = Method)) + geom_boxplot(show.legend = FALSE) +
  labs(color = "Method") + 
  ylab("average parent set size") + xlab("Method") + 
  scale_fill_manual(values = myPalette) + scale_color_manual(values = myPalette) + theme(legend.position = "none")

ggarrange(g1,g2)
