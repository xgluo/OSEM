---
title: "Statistical Models in Computational Biology - Project 11"
author: "Xiang Ge Luo"
date: '2021-05-20'
output:
  pdf_document:
    latex_engine: xelatex
mainfont: Arial
header-includes:
   - \usepackage{cancel}
---

# Problem 37: Beta-Binomial Distribution

*proof:*

We want to show that with $x=0,...n$,

$$
P(X=x) = \frac{\Gamma(n+1)\Gamma(x+u)\Gamma(n-x+v)\Gamma(u+v)}{\Gamma(x+1)\Gamma(n-x+1)\Gamma(u)\Gamma(v)\Gamma(n+u+v)}.
$$


We know that $(X \mid p) \sim Bin(n,p)$ and $p \sim Beta(u,v)$ with $u,v>0$. We have:

\begin{align}
P(X=x) &= \int_0^1 P(X=x \mid p) f(p)dp && \text{(marginalizing out $p$)}\nonumber \\
  &= \int_0^1 ({n\choose x} p^x (1-p)^{n-x}) (\frac{\Gamma(u+v)}{\Gamma(u)\Gamma(v)}p^{u-1}(1-p)^{v-1})dp &&\text{(plugging in density functions)}\nonumber\\
   &= \int_0^1 \frac{n!}{x!(n-x)!}\frac{\Gamma(u+v)}{\Gamma(u)\Gamma(v)}p^{x+u-1}(1-p)^{n-x+v-1})dp && \text{(expanded ${n\choose x}$)}\nonumber \\
   &= \frac{\Gamma(n+1)\Gamma(u+v)}{\Gamma(x+1)\Gamma(n-x+1)\Gamma(u)\Gamma(v)} \int_0^1 p^{x+u-1}(1-p)^{n-x+v-1}dp && (\Gamma(m) = (m-1)! \text{with $m \in \mathbb{Z}^+$)} \nonumber
\end{align}
Let $\tilde{u} := x+u$, $\tilde{v} := n-x+v$. Then $\tilde{u} + \tilde{v} = n+u+v$, and

\begin{align}
  P(X=x) &= \frac{\Gamma(n+1)\Gamma(u+v)}{\Gamma(x+1)\Gamma(n-x+1)\Gamma(u)\Gamma(v)} \frac{\Gamma(\tilde{u})\Gamma(\tilde{v})}{\Gamma(\tilde{u}+\tilde{v})} \int_0^1 \frac{\Gamma(\tilde{u}+\tilde{v})}{\Gamma(\tilde{u})\Gamma(\tilde{v})} p^{\tilde{u}-1}(1-p)^{\tilde{v}-1}dp\nonumber
\end{align}

where $\frac{\Gamma(\tilde{u}+\tilde{v})}{\Gamma(\tilde{u})\Gamma(\tilde{v})} p^{\tilde{u}-1}(1-p)^{\tilde{v}-1}$ is the density function of $Beta(\tilde{u},\tilde{v})$. Therefore,

\begin{align}
  P(X=x) &= \frac{\Gamma(n+1)\Gamma(u+v)}{\Gamma(x+1)\Gamma(n-x+1)\Gamma(u)\Gamma(v)} \frac{\Gamma(\tilde{u})\Gamma(\tilde{v})}{\Gamma(\tilde{u}+\tilde{v})} \times 1 \nonumber\\
   &= \frac{\Gamma(n+1)\Gamma(u+v)\Gamma(n-x+v)\Gamma(u+v)}{\Gamma(x+1)\Gamma(n-x+1)\Gamma(u)\Gamma(v)\Gamma(n+u+v)}\nonumber
\end{align}

\newpage

# Problem 38: SNV detection

```{r}
library(parallel)
```

## 1.

```{r cache = TRUE}
d.Normal <- read.table("Normal_pileup.txt",header = TRUE)
d.Tumor <- read.table("Tumor_pileup.txt",header = TRUE)
```

```{r}
par(mfrow = c(1,2))
hist(d.Normal$Coverage,
     main = "Normal Tissue Sample",xlab="Coverage")
hist(d.Tumor$Coverage,main = "Tumor Sample",xlab="Coverage")
```

## 2.

```{r}
##' Function: varscan2
##' For each position and each possible variant allele,
##' we first construct a 2-by-2 contingency table of the following form:
##'        | No. of variant alleles | No. of all other alleles
##' ============================================================
##' Tumor  |                        |
##' Normal |                        |
##' Then, we calculate the p-value using a right-tailed Fisher's Exact Test with
##' the alternative hypothesis being "greater".
##' @param pos: Position of the reference base
##' @return a dataframe with four columns: Position, Reference, Variant, P-value
varscan2 <- function(pos, d.Normal, d.Tumor) {
  
  # Initialize the final output dataframe
  res <- data.frame(matrix(nrow = 0,ncol=4))
  colnames(res) <- c("Position", "Reference", "Variant", "P_value")
  
  # Extract information for tumor sample
  temp <- d.Tumor[d.Tumor$Position == pos,]
  TumorRb <- toupper(unlist(strsplit(as.character(temp$Read_bases),"")))
  TumorCov <- temp$Coverage
  
  # Extract information for normal sample
  temp <- d.Normal[d.Normal$Position == pos,]
  NormalRb <- toupper(unlist(strsplit(as.character(temp$Read_bases),"")))
  Rb <- as.character(temp$Reference)
  NormalCov <- temp$Coverage
  rm(temp)
  
  # Determine the possible variant allele(s) using tumor sample:
  # An allele is a variant allele if it is different from the reference allele
  # and it appears more often than all other non-reference alleles.
  # In the case of ties, we store all the tie alleles.
  
  candidates <- sapply(setdiff(c("A","C","G","T"),Rb), function(a) sum(TumorRb == a))
  if (sum(candidates) == 0) {
    # If none of the non-reference alleles appear in the read bases,
    # it means there are no variants at this position, simply return an empty dataframe
    return(res)
  } else {
    variants <- names(which(candidates == max(candidates)))
    varCounts <- rep(max(candidates),length(variants))
  }

  # For each variant allele, create a contingency table and compute the p-value.
  # Append a new row to the output dataframe
  for (i in 1:length(variants)) {
    
    # Count the number of occurances of the ith variant in the normal read bases
    varCountNorm <- sum(NormalRb == variants[i])
    
    # Contingency table
    contTable <- matrix(c(varCounts[i],varCountNorm,
                          TumorCov - varCounts[i],NormalCov - varCountNorm), 
                        nrow = 2, ncol = 2, 
                        dimnames = list(c("Tumor","Normal"),
                                        c("No.Variant","No.Other")))
    res[i,] <- c(pos,
                 Rb,
                 variants[i],
                 fisher.test(contTable,alternative = "greater")$p.value)
  }
  
  res$P_value <- as.numeric(res$P_value)
  return(res)
}
```

```{r cache = TRUE}
# Run through all positions
res <- mclapply(d.Tumor$Position, varscan2, d.Normal, d.Tumor, mc.cores = detectCores())
res <- do.call("rbind",res)
```
```{r}
head(res)
str(res)
```


## 3.

```{r}
# Report the SNVs at 10% significance level
str(res[res$P_value<0.1,])
```

## 4.

```{r}
# Report the SNVs at 10% significance level after FDR correction
str(res[p.adjust(res$P_value,method = "fdr")<0.1,])
```

## 5.

Yes, the total number of significant SNVs after multiple testing correction is 19, which is smaller than 53, the total number of known SNVs. One reason could be the errors in the reads. Some of the variants are simply not captured by NGS. Another reason could be due to the much lower coverage in the normal sample. As we can see from question 1, the mean coverage of the tumor sample is around 100, whereas the one of the normal sample is only around 30. In this case, we may not obtain a significantly low p-value from the Fisher's Exact Test even if the detected variant is a true SNV.

